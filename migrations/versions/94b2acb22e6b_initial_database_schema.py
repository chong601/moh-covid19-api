"""Initial database schema

Revision ID: 94b2acb22e6b
Revises: 
Create Date: 2021-08-14 13:42:14.549491

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '94b2acb22e6b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cases_malaysia',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Case ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Case date'),
    sa.Column('cases_new', sa.Integer(), nullable=True, comment='New cases'),
    sa.Column('cluster_import', sa.Integer(), nullable=True, comment='Import new cases'),
    sa.Column('cluster_religious', sa.Integer(), nullable=True, comment='Religious new cases'),
    sa.Column('cluster_community', sa.Integer(), nullable=True, comment='Community new cases'),
    sa.Column('cluster_highRisk', sa.Integer(), nullable=True, comment='High-risk new cases'),
    sa.Column('cluster_education', sa.Integer(), nullable=True, comment='Education-related new cases'),
    sa.Column('cluster_detentionCentre', sa.Integer(), nullable=True, comment='Detention centre new cases'),
    sa.Column('cluster_workplace', sa.Integer(), nullable=True, comment='Workplace new cases'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('cases_malaysia_csv_pkey', 'cases_malaysia', ['date'], unique=False)
    op.create_table('cases_state',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Case ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Case date'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('cases_new', sa.Integer(), nullable=True, comment='New cases'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('cases_state_csv_pkey', 'cases_state', ['date', 'state'], unique=False)
    op.create_table('checkin_malaysia',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Checkin ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('checkins', sa.Integer(), nullable=True, comment='Number of checkins'),
    sa.Column('unique_ind', sa.Integer(), nullable=True, comment='Number of unique individuals checking in'),
    sa.Column('unique_loc', sa.Integer(), nullable=True, comment='Number of unique premises checked in'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('checkin_malaysia_csv_pkey', 'checkin_malaysia', ['date'], unique=False)
    op.create_table('checkin_malaysia_time',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Check-in ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('timeslot0', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot1', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot2', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot3', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot4', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot5', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot6', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot7', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot8', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot9', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot10', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot11', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot12', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot13', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot14', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot15', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot16', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot17', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot18', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot19', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot20', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot21', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot22', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot23', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot24', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot25', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot26', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot27', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot28', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot29', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot30', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot31', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot32', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot33', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot34', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot35', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot36', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot37', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot38', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot39', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot40', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot41', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot42', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot43', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot44', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot45', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot46', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.Column('timeslot47', sa.Integer(), nullable=True, comment='Time-slot'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('checkin_malaysia_time_csv_pkey', 'checkin_malaysia_time', ['date'], unique=False)
    op.create_table('checkin_state',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Checkin ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('checkins', sa.Integer(), nullable=True, comment='Number of checkins'),
    sa.Column('unique_ind', sa.Integer(), nullable=True, comment='Number of unique individuals checking in'),
    sa.Column('unique_loc', sa.Integer(), nullable=True, comment='Number of unique premises checked in'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('checkin_state_csv_pkey', 'checkin_state', ['date', 'state'], unique=False)
    op.create_table('clusters',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Cluster ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('cluster', sa.Text(), nullable=True, comment='Cluster name'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('district', sa.Text(), nullable=True, comment='District name'),
    sa.Column('date_announced', sa.Date(), nullable=True, comment='Date cluster is announced'),
    sa.Column('date_last_onset', sa.Date(), nullable=True, comment='Most recent date for individuals with symptoms'),
    sa.Column('category', sa.Text(), nullable=True, comment='Cluster category'),
    sa.Column('status', sa.Text(), nullable=True, comment='Cluster status'),
    sa.Column('cases_new', sa.Integer(), nullable=True, comment='New cases reported within 24 hours since last report'),
    sa.Column('cases_total', sa.Integer(), nullable=True, comment='Cluster total number of cases'),
    sa.Column('cases_active', sa.Integer(), nullable=True, comment='Cluster active cases'),
    sa.Column('tests', sa.Integer(), nullable=True, comment='Number of tests performed for the cluster'),
    sa.Column('icu', sa.Integer(), nullable=True, comment='Number of individuals under ICU care for the cluster'),
    sa.Column('deaths', sa.Integer(), nullable=True, comment='Number of deaths for the cluster'),
    sa.Column('recovered', sa.Integer(), nullable=True, comment='Number of recovered individuals for the cluster'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('clusters_csv_pkey', 'clusters', ['cluster', 'date_announced'], unique=False)
    op.create_table('deaths_malaysia',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Deaths ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('deaths_new', sa.Integer(), nullable=True, comment='New deaths for the reported date'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('deaths_malaysia_csv_pkey', 'deaths_malaysia', ['date'], unique=False)
    op.create_table('deaths_state',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Deaths ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('deaths_new', sa.Integer(), nullable=True, comment='New deaths for the reported date'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('deaths_state_csv_pkey', 'deaths_state', ['date', 'state'], unique=False)
    op.create_table('hospital_by_state',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Hospital ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('beds', sa.Integer(), nullable=True, comment='Total available hospital beds'),
    sa.Column('beds_noncrit', sa.Integer(), nullable=True, comment='Total available hospital beds for non-critical care'),
    sa.Column('admitted_pui', sa.Integer(), nullable=True, comment='Total admitted persons under investigation'),
    sa.Column('admitted_covid', sa.Integer(), nullable=True, comment='Total admitted persons with COVID-19'),
    sa.Column('admitted_total', sa.Integer(), nullable=True, comment='Total admissions'),
    sa.Column('discharged_pui', sa.Integer(), nullable=True, comment='Total discharged persons under investigation'),
    sa.Column('discharged_covid', sa.Integer(), nullable=True, comment='Total discharged persons with COVID-19'),
    sa.Column('discharged_total', sa.Integer(), nullable=True, comment='Total discharges'),
    sa.Column('hosp_pui', sa.Integer(), nullable=True, comment='Total hospitalised persons under investigation'),
    sa.Column('hosp_covid', sa.Integer(), nullable=True, comment='Total hospitalised COVID-19 patients'),
    sa.Column('hosp_noncovid', sa.Integer(), nullable=True, comment='Total non-COVID patients'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('hospital_csv_pkey', 'hospital_by_state', ['date', 'state'], unique=False)
    op.create_table('icu_by_state',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='ICU ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('bed_icu', sa.Integer(), nullable=True, comment='Gazetted ICU beds'),
    sa.Column('bed_icu_rep', sa.Integer(), nullable=True, comment='Total ICU beds for Anaesthesiology & Critical Care departments'),
    sa.Column('bed_icu_total', sa.Integer(), nullable=True, comment='Total ICU beds'),
    sa.Column('bed_icu_covid', sa.Integer(), nullable=True, comment='Total ICU beds dedicated for COVID-19'),
    sa.Column('vent', sa.Integer(), nullable=True, comment='Total available ventilators'),
    sa.Column('vent_port', sa.Integer(), nullable=True, comment='Total available portable ventilators'),
    sa.Column('icu_covid', sa.Integer(), nullable=True, comment='Total number of COVID individuals under ICU care'),
    sa.Column('icu_pui', sa.Integer(), nullable=True, comment='Total number of PUI individuals under ICU care'),
    sa.Column('icu_noncovid', sa.Integer(), nullable=True, comment='Total number of non-COVID individuals under ICU care'),
    sa.Column('vent_covid', sa.Integer(), nullable=True, comment='Total number of COVID individuals that require ventilator'),
    sa.Column('vent_pui', sa.Integer(), nullable=True, comment='Total number of PUI individuals that require ventilator'),
    sa.Column('vent_noncovid', sa.Integer(), nullable=True, comment='Total number of non-COVID individuals that require ventilator'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('icu_csv_pkey', 'icu_by_state', ['date', 'state'], unique=False)
    op.create_table('pkrc_by_state',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='PKRC ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('beds', sa.Integer(), nullable=True, comment='Total available PKRC beds'),
    sa.Column('admitted_pui', sa.Integer(), nullable=True, comment='Total admitted persons under investigation'),
    sa.Column('admitted_covid', sa.Integer(), nullable=True, comment='Total admitted persons with COVID-19'),
    sa.Column('admitted_total', sa.Integer(), nullable=True, comment='Total admissions'),
    sa.Column('discharge_pui', sa.Integer(), nullable=True, comment='Total discharged persons under investigation'),
    sa.Column('discharge_covid', sa.Integer(), nullable=True, comment='Total discharged persons with COVID-19'),
    sa.Column('discharge_total', sa.Integer(), nullable=True, comment='Total discharges'),
    sa.Column('pkrc_pui', sa.Integer(), nullable=True, comment='Total hospitalised persons under investigation'),
    sa.Column('pkrc_covid', sa.Integer(), nullable=True, comment='Total hospitalised COVID-19 patients'),
    sa.Column('pkrc_noncovid', sa.Integer(), nullable=True, comment='Total non-COVID patients'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('pkrc_csv_pkey', 'pkrc_by_state', ['date', 'state'], unique=False)
    op.create_table('population',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Population ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('idxs', sa.Integer(), nullable=True, comment='Population index (possibly MOH internal)'),
    sa.Column('pop', sa.Integer(), nullable=True, comment='Total state population'),
    sa.Column('pop_18', sa.Integer(), nullable=True, comment='Total state population ages >= 18'),
    sa.Column('pop_60', sa.Integer(), nullable=True, comment='Total state population ages >= 60'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('population_csv_pkey', 'population', ['idxs'], unique=False)
    op.create_index('population_state_idx', 'population', ['state'], unique=False)
    op.create_table('repository_update_status',
    sa.Column('repository_id', sa.Text(), nullable=False, comment='Repository UUID'),
    sa.Column('repository_name', sa.Text(), nullable=False, comment='Repository name'),
    sa.Column('repository_category', sa.Text(), nullable=False, comment='Repository category'),
    sa.Column('last_update', sa.DateTime(), nullable=False, comment='Last successful update date and time'),
    sa.Column('repository_hash', sa.Text(), nullable=False, comment='SHA-256 of the last successful hash'),
    sa.PrimaryKeyConstraint('repository_id')
    )
    op.create_index('repository_update_status_search_idx', 'repository_update_status', ['repository_name', 'repository_category'], unique=False)
    op.create_table('tests_malaysia',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Tests UUID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('rtk_ag', sa.Integer(), nullable=True, comment='Total RTK-Ag tests performed'),
    sa.Column('pcr', sa.Integer(), nullable=True, comment='Total RT-PCR tests performed'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('tests_malaysia_csv_pkey', 'tests_malaysia', ['date'], unique=False)
    op.create_table('trace_malaysia',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Trace ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('casual_contacts', sa.Integer(), nullable=True, comment='Casual contact count'),
    sa.Column('hide_large', sa.Integer(), nullable=True, comment='Large hotspot count identified by CPRC HIDE system'),
    sa.Column('hide_small', sa.Integer(), nullable=True, comment='Small hotspot count identified by CPRC HIDE system'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('trace_malaysia_csv_pkey', 'trace_malaysia', ['date'], unique=False)
    op.create_table('vax_malaysia',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Row ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('dose1_daily', sa.Integer(), nullable=True, comment='1st doses delivered between 0000 and 2359 on date'),
    sa.Column('dose2_daily', sa.Integer(), nullable=True, comment='2nd doses delivered between 0000 and 2359 on date'),
    sa.Column('total_daily', sa.Integer(), nullable=True, comment='Sum of 1st and 2nd dose delivered between 00000 and 2359 on date'),
    sa.Column('dose1_cumul', sa.Integer(), nullable=True, comment='Sum of dose1_daily from first day of programme until row date'),
    sa.Column('dose2_cumul', sa.Integer(), nullable=True, comment='Sum of dose2_daily from first day of programme until row date'),
    sa.Column('total_cumul', sa.Integer(), nullable=True, comment='Sum of dose1_daily and dose2_daily until row date'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('vax_malaysia_csv_pkey', 'vax_malaysia', ['date'], unique=False)
    op.create_table('vax_state',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Row ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Reported date'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('dose1_daily', sa.Integer(), nullable=True, comment='1st doses delivered between 0000 and 2359 on date'),
    sa.Column('dose2_daily', sa.Integer(), nullable=True, comment='2nd doses delivered between 0000 and 2359 on date'),
    sa.Column('total_daily', sa.Integer(), nullable=True, comment='Sum of 1st and 2nd dose delivered between 00000 and 2359 on date'),
    sa.Column('dose1_cumul', sa.Integer(), nullable=True, comment='Sum of dose1_daily from first day of programme until row date'),
    sa.Column('dose2_cumul', sa.Integer(), nullable=True, comment='Sum of dose2_daily from first day of programme until row date'),
    sa.Column('total_cumul', sa.Integer(), nullable=True, comment='Sum of dose1_daily and dose2_daily until row date'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('vax_state_csv_pkey', 'vax_state', ['date', 'state'], unique=False)
    op.create_table('vaxreg_malaysia',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Row ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Date'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('total', sa.Integer(), nullable=True, comment='Number of unique registrants'),
    sa.Column('phase2', sa.Integer(), nullable=True, comment='Number of unique individuals eligible for Phase 2'),
    sa.Column('mysj', sa.Integer(), nullable=True, comment='Number of individuals registered via MySejahtera'),
    sa.Column('call', sa.Integer(), nullable=True, comment='Number of individuals registered via the call centre'),
    sa.Column('web', sa.Integer(), nullable=True, comment='Number of individuals registered via the website'),
    sa.Column('children', sa.Integer(), nullable=True, comment='Number of individuals below 18'),
    sa.Column('elderly', sa.Integer(), nullable=True, comment='Number of individuals aged 60 and above'),
    sa.Column('comorb', sa.Integer(), nullable=True, comment='Number of individuals self-declaring at least 1 comorbidity'),
    sa.Column('oku', sa.Integer(), nullable=True, comment='Number of individuals self-declaring as OKU'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('vaxreg_malaysia_csv_pkey', 'vaxreg_malaysia', ['date'], unique=False)
    op.create_table('vaxreg_state',
    sa.Column('row_id', sa.Integer(), autoincrement=False, nullable=False, comment='Row ID'),
    sa.Column('row_version', sa.Integer(), nullable=True, comment='Row version'),
    sa.Column('date', sa.Date(), nullable=True, comment='Date'),
    sa.Column('state', sa.Text(), nullable=True, comment='State name'),
    sa.Column('total', sa.Integer(), nullable=True, comment='Number of unique registrants'),
    sa.Column('phase2', sa.Integer(), nullable=True, comment='Number of unique individuals eligible for Phase 2'),
    sa.Column('mysj', sa.Integer(), nullable=True, comment='Number of individuals registered via MySejahtera'),
    sa.Column('call', sa.Integer(), nullable=True, comment='Number of individuals registered via the call centre'),
    sa.Column('web', sa.Integer(), nullable=True, comment='Number of individuals registered via the website'),
    sa.Column('children', sa.Integer(), nullable=True, comment='Number of individuals below 18'),
    sa.Column('elderly', sa.Integer(), nullable=True, comment='Number of individuals aged 60 and above'),
    sa.Column('comorb', sa.Integer(), nullable=True, comment='Number of individuals self-declaring at least 1 comorbidity'),
    sa.Column('oku', sa.Integer(), nullable=True, comment='Number of individuals self-declaring as OKU'),
    sa.PrimaryKeyConstraint('row_id')
    )
    op.create_index('vaxreg_state_csv_pkey', 'vaxreg_state', ['date', 'state'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('vaxreg_state_csv_pkey', table_name='vaxreg_state')
    op.drop_table('vaxreg_state')
    op.drop_index('vaxreg_malaysia_csv_pkey', table_name='vaxreg_malaysia')
    op.drop_table('vaxreg_malaysia')
    op.drop_index('vax_state_csv_pkey', table_name='vax_state')
    op.drop_table('vax_state')
    op.drop_index('vax_malaysia_csv_pkey', table_name='vax_malaysia')
    op.drop_table('vax_malaysia')
    op.drop_index('trace_malaysia_csv_pkey', table_name='trace_malaysia')
    op.drop_table('trace_malaysia')
    op.drop_index('tests_malaysia_csv_pkey', table_name='tests_malaysia')
    op.drop_table('tests_malaysia')
    op.drop_index('repository_update_status_search_idx', table_name='repository_update_status')
    op.drop_table('repository_update_status')
    op.drop_index('population_state_idx', table_name='population')
    op.drop_index('population_csv_pkey', table_name='population')
    op.drop_table('population')
    op.drop_index('pkrc_csv_pkey', table_name='pkrc_by_state')
    op.drop_table('pkrc_by_state')
    op.drop_index('icu_csv_pkey', table_name='icu_by_state')
    op.drop_table('icu_by_state')
    op.drop_index('hospital_csv_pkey', table_name='hospital_by_state')
    op.drop_table('hospital_by_state')
    op.drop_index('deaths_state_csv_pkey', table_name='deaths_state')
    op.drop_table('deaths_state')
    op.drop_index('deaths_malaysia_csv_pkey', table_name='deaths_malaysia')
    op.drop_table('deaths_malaysia')
    op.drop_index('clusters_csv_pkey', table_name='clusters')
    op.drop_table('clusters')
    op.drop_index('checkin_state_csv_pkey', table_name='checkin_state')
    op.drop_table('checkin_state')
    op.drop_index('checkin_malaysia_time_csv_pkey', table_name='checkin_malaysia_time')
    op.drop_table('checkin_malaysia_time')
    op.drop_index('checkin_malaysia_csv_pkey', table_name='checkin_malaysia')
    op.drop_table('checkin_malaysia')
    op.drop_index('cases_state_csv_pkey', table_name='cases_state')
    op.drop_table('cases_state')
    op.drop_index('cases_malaysia_csv_pkey', table_name='cases_malaysia')
    op.drop_table('cases_malaysia')
    # ### end Alembic commands ###
